#!/bin/bash

usage()
{
	_executable="$1"

	cat <<EOL
Usage:
    $_executable find-board device_regex
      Find the port on which the Arduino is available.

      device_regex: regex that the serial port in /dev must match.

    $_executable makefile
      Print a template Makefile for an Arduino project.

EXAMPLES

    # Find an Arduino named /dev/cu.usbserial
    $_executable find-board "cu\.usb(serial|modem)"

    # Create a Makefile for a new project.
    $_executable makefile > Makefile
EOL
}

find_board()
{
	_regex="$1"
	shift

	# shellcheck disable=SC2010
	_found="$( ls -1 /dev | grep -E "${_regex}" | tr $'\n' ' ' )"
	IFS=" " read -r -a _devs <<< "$_found"
	_num_devs="${#_devs[@]}"

	if [[ "$_num_devs" -eq 0 ]]; then
		printf "No device matching '%s' found in /dev/.\n" "$_regex" >&2
		exit 1
	elif [[ "$_num_devs" -gt 1 ]]; then
		printf "More than one device matching '%s' found in /dev/:\n" "$_regex" >&2
		printf "%s\n" "${_devs[@]}" >&2
		exit 1
	else
		echo "/dev/${_devs[0]}"
	fi
}

makefile()
{
	_executable="$1"

cat <<EOL
# Generated by '$_executable makefile'

EOL

cat <<"EOL"
# Adapt this regex to match the range of names your Arduino might appear in /dev/.
PORT_REGEX = cu\.usb(modem|serial)
BAUD_RATE = 115200

BOARD = # e.g. arduino:avr:nano
BOARD_OPTIONS = # e.g. cpu=atmega328old
# Path to the folder containing the libraries for your project.
LIB_PATH = libraries
# Space-delimited list of libraries from LIB_PATH.
LIBRARIES = 
BUILD_PATH = build

LIB_OPTS = $(addprefix --library \$(LIB_PATH)/,$(LIBRARIES))
COMPILE_OPTS = \
	--fqbn "$(BOARD)" \
	--board-options "$(BOARD_OPTIONS)" \
	$(LIB_OPTS) \
	--build-path "$(BUILD_PATH)"
UPLOAD_OPTS = \
	--fqbn "$(BOARD)" \
	--board-options "$(BOARD_OPTIONS)" \
	--input-dir "$(BUILD_PATH)"

EOL

cat <<EOL
PORT = \$(shell $_executable find-board "\$(PORT_REGEX)")

EOL

cat <<"EOL"
compile:
	arduino-cli compile $(COMPILE_OPTS)

upload:
	arduino-cli upload $(UPLOAD_OPTS) --port "$(PORT)"

monitor:
	arduino-cli monitor --config baudrate=$(BAUD_RATE) --port "$(PORT)"
EOL
}

main()
{
	_executable=$( basename "$0" )

	if [[ $# -lt 1 ]]; then
		usage "$_executable"
		exit 1
	fi

	_cmd="$1"
	shift

	if [[ "$_cmd" == 'find-board' ]]; then
		if [[ $# -lt 1 ]]; then
			usage "$_executable"
			exit 1
		fi

		find_board "$1"
	elif [[ "$_cmd" == 'makefile' ]]; then
		if [[ $# -gt 0 ]]; then
			usage "$_executable"
			exit 1
		fi

		makefile "$_executable"
	else
		usage "$_executable"
		exit 1
	fi
}

main "$@"
